# front_bot/routers/stats.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from utils import texts
from utils.api_client import stats_resumes, stats_resume


async def stats_entry(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—é–º–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    q = update.callback_query
    await q.answer()
    tg_id = update.effective_chat.id

    try:
        data = await stats_resumes(tg_id)
    except Exception:
        kb = [[InlineKeyboardButton(texts.BACK_TO_MAIN_MENU, callback_data="main_menu")]]
        await q.message.edit_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—é–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=InlineKeyboardMarkup(kb))
        return

    items = data.get("items", [])
    if not items:
        kb = [[InlineKeyboardButton(texts.BACK_TO_MAIN_MENU, callback_data="main_menu")]]
        await q.message.edit_text("–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∑—é–º–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.", reply_markup=InlineKeyboardMarkup(kb))
        return

    kb = [[InlineKeyboardButton(i["name"], callback_data=f"stat_r_{i['id']}")] for i in items]
    kb.append([InlineKeyboardButton(texts.BACK_TO_MAIN_MENU, callback_data="main_menu")])
    await q.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—é–º–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", reply_markup=InlineKeyboardMarkup(kb))


async def stats_show(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–µ–∑—é–º–µ."""
    q = update.callback_query
    await q.answer()
    tg_id = update.effective_chat.id

    try:
        rid = q.data.split("_")[-1]
        rid = int(rid) if rid.isdigit() else rid
    except Exception:
        kb = [[InlineKeyboardButton(texts.BACK_TO_MAIN_MENU, callback_data="main_menu")]]
        await q.message.edit_text("–ù–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ–∑—é–º–µ.", reply_markup=InlineKeyboardMarkup(kb))
        return

    try:
        s = await stats_resume(tg_id, rid)
    except Exception:
        kb = [[InlineKeyboardButton(texts.BACK_TO_MAIN_MENU, callback_data="main_menu")]]
        await q.message.edit_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=InlineKeyboardMarkup(kb))
        return

    text_out = (
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Ä–µ–∑—é–º–µ \"{s.get('name','‚Äî')}\":\n"
        f"‚Ä¢ –í—Å–µ–≥–æ –æ—Ç–∫–ª–∏–∫–æ–≤ —á–µ—Ä–µ–∑ –±–æ—Ç–∞: {int(s.get('total_responses',0))}\n"
        f"‚Ä¢ –°–µ–≥–æ–¥–Ω—è: {int(s.get('responses_today',0))}\n"
        f"‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: {int(s.get('invites',0))}\n"
        f"‚Ä¢ –û—Ç–∫–∞–∑–æ–≤: {int(s.get('declines',0))}\n\n"
        f"–ö–æ–Ω–≤–µ—Ä—Å–∏—è –∏–∑ –æ—Ç–∫–ª–∏–∫–∞ –≤ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ‚Äî {s.get('conversion',0)}%"
    )

    kb = [[InlineKeyboardButton(texts.BACK_TO_MAIN_MENU, callback_data="main_menu")]]
    await q.message.edit_text(text_out, reply_markup=InlineKeyboardMarkup(kb))
